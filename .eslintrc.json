{
	"env": {
		"es2022": true,
		"browser": true
	},
	"extends": [
		"airbnb",
		"airbnb-typescript",
		"plugin:prettier/recommended",
		"plugin:tailwindcss/recommended",
		"plugin:unicorn/recommended"
	],
	"ignorePatterns": [
		".eslintrc.json",
		"vite.config.ts",
		"postcss.config.js",
		"tailwind.config.js",
		"commitlint.config.js",
		"jest.config.ts",
		"jest.setup.ts"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": ["./tsconfig.json"]
	},
	"plugins": [
		"@typescript-eslint",
		"react-refresh",
		"react-hooks",
		"import-helpers",
		"unicorn",
		"unused-imports",
		"tailwindcss"
	],
	"rules": {
		"prettier/prettier": [
			"error",
			{
				"singleQuote": true,
				"endOfLine": "auto"
			}
		],
		// TypeScript related rules
		"@typescript-eslint/comma-dangle": "off",
		"@typescript-eslint/consistent-type-imports": "error",
		"@typescript-eslint/no-unused-vars": "off",

		// Import and module related rules
		"import/prefer-default-export": "off", // Named export is easier to refactor automatically
		"unused-imports/no-unused-imports": "error",
		"unused-imports/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
		"import-helpers/order-imports": [
			"warn", // or "error" if you want it to be treated as an error
			{
				"newlinesBetween": "always", // new line between groups
				"groups": [
					"module",
					["/^@application/", "/^@services/", "/^@lib/"],
					"/^@domains/", // if you have internal shared modules
					"/^@user/", // manuali add
					[
						"/^@ui/atoms/",
						"/^@ui/molecules/",
						"/^@ui/organism/",
						"/^@ui/template/"
					],
					["parent", "sibling", "index"]
				],
				"alphabetize": { "order": "asc", "ignoreCase": true }
			}
		],

		// React related rules
		"react/prop-types": "off",
		"react/function-component-definition": "off",
		"react/destructuring-assignment": "off",
		"react/require-default-props": "off",
		"react/jsx-props-no-spreading": "off",
		"react/react-in-jsx-scope": "off",
		"react-hooks/rules-of-hooks": "error", // Verify the list of the dependencies for Hooks like useEffect and others
		"react-hooks/exhaustive-deps": "warn", // Verify the list of the dependencies for effects

		// Other rules
		"no-restricted-syntax": [
			"error",
			"ForInStatement",
			"LabeledStatement",
			"WithStatement"
		],
		"unicorn/custom-error-definition": "error",
		"unicorn/empty-brace-spaces": "error",
		"unicorn/no-array-for-each": "off",
		"unicorn/no-array-reduce": "off",
		"unicorn/no-console-spaces": "error",
		"unicorn/no-null": "off",
		"unicorn/filename-case": [
			"error",
			{
				"cases": {
					"kebabCase": true,
					"pascalCase": true
				}
			}
		],
		"unicorn/prevent-abbreviations": [
			"error",
			{
				"replacements": {
					"db": false,
					"arg": false,
					"args": false,
					"env": false,
					"fn": false,
					"func": {
						"fn": true,
						"function": false
					},
					"prop": false,
					"props": false,
					"ref": false,
					"refs": false
				},
				"ignore": ["semVer", "SemVer"]
			}
		]
	}
}
